services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - local-kafka

  broker:
    image: wurstmeister/kafka
    container_name: brokerKafka
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      # KAFKA_ADVERTISED_HOST_NAME: kafka # Use the service name as the advertised host
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_CREATE_TOPICS: "input:3:1,output:3:1" # topic-name:partitions:replicas
      KAFKA_LISTENERS: PLAINTEXT_INTERNAL://0.0.0.0:29092,PLAINTEXT_C://0.0.0.0:9093,PLAINTEXT_L://0.0.0.0:9092,
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INTERNAL://broker:29092,PLAINTEXT_L://localhost:9092,PLAINTEXT_C://broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_L:PLAINTEXT,PLAINTEXT_C:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_CREATE_TOPICS: "input:3:1,output:3:1" # Format: topic:partitions:replicas
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - local-kafka

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-UAY
    networks:
      - local-kafka
    depends_on: 
      - broker
    ports:
      - "7777:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=broker
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

networks:
  local-kafka:
    driver: bridge